name: Build SafariBlocker IPA

on:
  push:
    branches:
      - main  # Change this if your default branch is different
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures the full repo is cloned

      - name: Debug Repository Structure
        run: |
          echo "📂 Listing all files in the repository..."
          ls -R
          echo "🔍 Searching for .xcodeproj file..."
          find . -name "*.xcodeproj"
          echo "🔍 Searching for .xcworkspace file..."
          find . -name "*.xcworkspace"

      - name: Generate Xcode Project (if missing)
        run: |
          if [ -z "$(find . -name '*.xcodeproj')" ]; then
            echo "⚠️ No .xcodeproj found! Trying to generate it..."
            swift package generate-xcodeproj
          fi

      - name: Find Xcode Project
        id: find_project
        run: |
          PROJECT_PATH=$(find . -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT_PATH" ]; then
            echo "❌ ERROR: No .xcodeproj found even after generation!"
            exit 1
          fi
          PROJECT_DIR=$(dirname "$PROJECT_PATH")
          echo "✅ Found project in $PROJECT_DIR"
          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          brew install cocoapods
          cd "$PROJECT_DIR"
          if [ -f "Podfile" ]; then
            pod install
          else
            echo "⚠️ No Podfile found, skipping Cocoapods install."
          fi

      - name: Detect Workspace or Project
        id: detect_xcode_file
        run: |
          if [ -n "$(find $PROJECT_DIR -name '*.xcworkspace')" ]; then
            XCFILE=$(find $PROJECT_DIR -name '*.xcworkspace' | head -n 1)
            echo "✅ Found workspace: $XCFILE"
            echo "XCFILE=$XCFILE" >> $GITHUB_ENV
            echo "XCTYPE=workspace" >> $GITHUB_ENV
          else
            XCFILE=$(find $PROJECT_DIR -name '*.xcodeproj' | head -n 1)
            echo "✅ Found project: $XCFILE"
            echo "XCFILE=$XCFILE" >> $GITHUB_ENV
            echo "XCTYPE=project" >> $GITHUB_ENV
          fi

      - name: Build the SafariBlocker App
        run: |
          cd "$PROJECT_DIR"
          if [ "$XCTYPE" == "workspace" ]; then
            xcodebuild -workspace "$XCFILE" \
              -scheme SafariBlocker \
              -sdk iphoneos \
              -configuration Release \
              CODE_SIGN_IDENTITY="" \
              CODE_SIGNING_REQUIRED=NO \
              CODE_SIGNING_ALLOWED=NO \
              -archivePath SafariBlocker.xcarchive archive
          else
            xcodebuild -project "$XCFILE" \
              -scheme SafariBlocker \
              -sdk iphoneos \
              -configuration Release \
              CODE_SIGN_IDENTITY="" \
              CODE_SIGNING_REQUIRED=NO \
              CODE_SIGNING_ALLOWED=NO \
              -archivePath SafariBlocker.xcarchive archive
          fi

      - name: Export IPA
        run: |
          cd "$PROJECT_DIR"
          mkdir -p output
          xcodebuild -exportArchive \
            -archivePath SafariBlocker.xcarchive \
            -exportPath output \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload IPA as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: SafariBlocker.ipa
          path: ${{ env.PROJECT_DIR }}/output/*.ipa
